(()=>{"use strict";var e={805:(e,t,n)=>{n.d(t,{Z:()=>d});var i=n(537),r=n.n(i),a=n(645),o=n.n(a)()(r());o.push([e.id,".header {\n    position: fixed;\n    width: 100%;\n    height:  var(--header-height);\n    top: 0px;\n    background-color: rgb(198, 104, 121);\n}\n\n.header-icon {\n    position: relative;\n    height: 100%;\n    \n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    background-color: transparent; \n    border: 0px;\n    font-size: 1rem;\n}\n\n.header-icon-image {\n    height: 70%;\n}\n\n.sidebar {\n    position: fixed;\n    left: 0px;\n    top: var(--header-height);\n\n    width: var(--sidebar-width);\n    height: calc(100vh - var(--header-height));\n\n    background-color: rgb(105, 175, 175);\n    border-right: 3px solid black;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.sidebar-btn {\n    background-color: transparent; \n    border: 0px;\n    font-size: 1.5rem;\n    margin: 10%;\n}\n\n#main-project-button {\n    margin-bottom: 0;\n}\n\n#main-project-button:hover {\n    color: black;\n}\n\n.project-btns-container {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.single-project-btns-container {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n}\n\n.project-delete-btn {\n    background-color: rgb(187, 80, 80);\n    border-radius: 5px;\n}\n\n.sidebar-project-btn {\n    background-color: transparent; \n    border: 0px;\n    font-size: 1rem;\n    margin: 2%;\n}\n\n.sidebar-btn:hover {\n    color: white;\n}\n\n.plus-btn {\n    margin-left: 5%;\n    margin-bottom: 5%;\n    margin-top: auto;\n    align-self: flex-start;\n\n    background-color: rgb(181, 181, 184);\n    font-size: 2rem;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n}\n\n.main-content {\n    position: fixed;\n    left: var(--sidebar-width);\n    top: var(--header-height);\n\n    width: calc(100vw - var(--sidebar-width));\n    height: calc(100vh - var(--header-height));\n\n    background-color: rgb(95, 103, 103);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 10px;\n}\n\n.empty-content {\n    font-size: 2rem;\n    text-align: center;\n}\n\n.task-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    \n    width: 90%;\n    height: max(30px, 7%);\n    background-color: rgb(233, 233, 238);\n    border-radius: 10px;\n\n    padding-left: 10px;\n    padding-right: 10px;\n\n    margin-bottom: 10px;\n}\n\n.task-container > div, .task-container > button {\n    align-self: center;\n    padding: 10px;\n}\n\n.task-name {\n    margin-right: auto;\n}\n\n.task-button {\n    width: 15%;\n    height: 90%;\n}\n\n.task-button-icon {\n    height: 90%;\n}\n\n.details-container {\n    filter: blur(0px);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n\n    width: 350px;\n    height: 150px;\n    padding: 10px;\n    background-color: rgb(147, 136, 136);\n}\n\n.details-box-exit-button {\n    align-self: flex-end;\n}","",{version:3,sources:["webpack://./src/pages/components/components.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,WAAW;IACX,6BAA6B;IAC7B,QAAQ;IACR,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,YAAY;;IAEZ,aAAa;IACb,mBAAmB;IACnB,mBAAmB;;IAEnB,6BAA6B;IAC7B,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,SAAS;IACT,yBAAyB;;IAEzB,2BAA2B;IAC3B,0CAA0C;;IAE1C,oCAAoC;IACpC,6BAA6B;;IAE7B,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,6BAA6B;IAC7B,WAAW;IACX,iBAAiB;IACjB,WAAW;AACf;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,kCAAkC;IAClC,kBAAkB;AACtB;;AAEA;IACI,6BAA6B;IAC7B,WAAW;IACX,eAAe;IACf,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;;IAEtB,oCAAoC;IACpC,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,0BAA0B;IAC1B,yBAAyB;;IAEzB,yCAAyC;IACzC,0CAA0C;;IAE1C,mCAAmC;;IAEnC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;IAEnB,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;;IAE7B,UAAU;IACV,qBAAqB;IACrB,oCAAoC;IACpC,mBAAmB;;IAEnB,kBAAkB;IAClB,mBAAmB;;IAEnB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,iBAAiB;;IAEjB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;IAEnB,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,gCAAgC;;IAEhC,YAAY;IACZ,aAAa;IACb,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,oBAAoB;AACxB",sourcesContent:[".header {\n    position: fixed;\n    width: 100%;\n    height:  var(--header-height);\n    top: 0px;\n    background-color: rgb(198, 104, 121);\n}\n\n.header-icon {\n    position: relative;\n    height: 100%;\n    \n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    background-color: transparent; \n    border: 0px;\n    font-size: 1rem;\n}\n\n.header-icon-image {\n    height: 70%;\n}\n\n.sidebar {\n    position: fixed;\n    left: 0px;\n    top: var(--header-height);\n\n    width: var(--sidebar-width);\n    height: calc(100vh - var(--header-height));\n\n    background-color: rgb(105, 175, 175);\n    border-right: 3px solid black;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.sidebar-btn {\n    background-color: transparent; \n    border: 0px;\n    font-size: 1.5rem;\n    margin: 10%;\n}\n\n#main-project-button {\n    margin-bottom: 0;\n}\n\n#main-project-button:hover {\n    color: black;\n}\n\n.project-btns-container {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n}\n\n.single-project-btns-container {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n}\n\n.project-delete-btn {\n    background-color: rgb(187, 80, 80);\n    border-radius: 5px;\n}\n\n.sidebar-project-btn {\n    background-color: transparent; \n    border: 0px;\n    font-size: 1rem;\n    margin: 2%;\n}\n\n.sidebar-btn:hover {\n    color: white;\n}\n\n.plus-btn {\n    margin-left: 5%;\n    margin-bottom: 5%;\n    margin-top: auto;\n    align-self: flex-start;\n\n    background-color: rgb(181, 181, 184);\n    font-size: 2rem;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n}\n\n.main-content {\n    position: fixed;\n    left: var(--sidebar-width);\n    top: var(--header-height);\n\n    width: calc(100vw - var(--sidebar-width));\n    height: calc(100vh - var(--header-height));\n\n    background-color: rgb(95, 103, 103);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: 10px;\n}\n\n.empty-content {\n    font-size: 2rem;\n    text-align: center;\n}\n\n.task-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    \n    width: 90%;\n    height: max(30px, 7%);\n    background-color: rgb(233, 233, 238);\n    border-radius: 10px;\n\n    padding-left: 10px;\n    padding-right: 10px;\n\n    margin-bottom: 10px;\n}\n\n.task-container > div, .task-container > button {\n    align-self: center;\n    padding: 10px;\n}\n\n.task-name {\n    margin-right: auto;\n}\n\n.task-button {\n    width: 15%;\n    height: 90%;\n}\n\n.task-button-icon {\n    height: 90%;\n}\n\n.details-container {\n    filter: blur(0px);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n\n    width: 350px;\n    height: 150px;\n    padding: 10px;\n    background-color: rgb(147, 136, 136);\n}\n\n.details-box-exit-button {\n    align-self: flex-end;\n}"],sourceRoot:""}]);const d=o},18:(e,t,n)=>{n.d(t,{Z:()=>d});var i=n(537),r=n.n(i),a=n(645),o=n.n(a)()(r());o.push([e.id,"::placeholder {\n    color: black;\n}\n\ntextarea {\n    resize: none;\n}\n\ninput:not([type]), textarea {\n    background-color: rgb(255, 254, 254);\n}\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n\n.background-filter {\n    filter: blur(3px);\n}\n\n.new-form-container {\n    filter: blur(0px);\n\n    display: grid;\n    grid-template: 1fr 10fr / 1fr 6fr;\n    justify-content: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n\n    width: 350px;\n    height: 150px;\n    padding: 10px;\n    background-color: rgb(147, 136, 136);\n}\n\n.new-form-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    align-self: center;\n}\n\n.new-type-buttons-container {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n}\n\n.new-type-button {\n    background-color: aqua;\n}\n\n.priority-buttons {\n    justify-self: end;\n}\n\n.new-task-form {\n    filter: blur(0px);\n\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n\n    display: flex;\n    flex-direction: column;\n}\n\n.new-project-form {\n    display: flex;\n    flex-direction: column;\n}\n\n.new-form-submit-button {\n    width: 20%;\n    justify-self: end;\n}","",{version:3,sources:["webpack://./src/pages/components/forms/forms.css"],names:[],mappings:"AAAA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;;IAEjB,aAAa;IACb,iCAAiC;IACjC,uBAAuB;;IAEvB,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,kBAAkB;IAClB,gCAAgC;;IAEhC,YAAY;IACZ,aAAa;IACb,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;;IAEjB,eAAe;IACf,kBAAkB;;IAElB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,iBAAiB;AACrB",sourcesContent:["::placeholder {\n    color: black;\n}\n\ntextarea {\n    resize: none;\n}\n\ninput:not([type]), textarea {\n    background-color: rgb(255, 254, 254);\n}\n\ntextarea:focus, input:focus{\n    outline: none;\n}\n\n.background-filter {\n    filter: blur(3px);\n}\n\n.new-form-container {\n    filter: blur(0px);\n\n    display: grid;\n    grid-template: 1fr 10fr / 1fr 6fr;\n    justify-content: center;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n\n    width: 350px;\n    height: 150px;\n    padding: 10px;\n    background-color: rgb(147, 136, 136);\n}\n\n.new-form-header {\n    grid-row: 1 / 2;\n    grid-column: 1 / 3;\n    align-self: center;\n}\n\n.new-type-buttons-container {\n    display: flex;\n    flex-direction: column;\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n}\n\n.new-type-button {\n    background-color: aqua;\n}\n\n.priority-buttons {\n    justify-self: end;\n}\n\n.new-task-form {\n    filter: blur(0px);\n\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n\n    display: flex;\n    flex-direction: column;\n}\n\n.new-project-form {\n    display: flex;\n    flex-direction: column;\n}\n\n.new-form-submit-button {\n    width: 20%;\n    justify-self: end;\n}"],sourceRoot:""}]);const d=o},748:(e,t,n)=>{n.d(t,{Z:()=>d});var i=n(537),r=n.n(i),a=n(645),o=n.n(a)()(r());o.push([e.id,":root {\n    --header-height: 50px;\n    --sidebar-width: min(20%, 150px);\n}\n\nbody {\n    margin: 0px;\n}","",{version:3,sources:["webpack://./src/pages/index.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,gCAAgC;AACpC;;AAEA;IACI,WAAW;AACf",sourcesContent:[":root {\n    --header-height: 50px;\n    --sidebar-width: min(20%, 150px);\n}\n\nbody {\n    margin: 0px;\n}"],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var d=0;d<this.length;d++){var l=this[d][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);i&&o[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,i=0;i<t.length;i++)if(t[i].identifier===e){n=i;break}return n}function i(e,i){for(var a={},o=[],d=0;d<e.length;d++){var l=e[d],c=i.base?l[0]+i.base:l[0],s=a[c]||0,p="".concat(c," ").concat(s);a[c]=s+1;var A=n(p),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var m=r(u,i);i.byIndex=d,t.splice(d,0,{identifier:p,updater:m,references:1})}o.push(p)}return o}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=i(e=e||[],r=r||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var d=n(a[o]);t[d].references--}for(var l=i(e,r),c=0;c<a.length;c++){var s=n(a[c]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var i=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,r&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={id:i,exports:{}};return e[i](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");if(i.length)for(var r=i.length-1;r>-1&&!e;)e=i[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0;var i={};(()=>{n.d(i,{Z:()=>Z});var e=n(379),t=n.n(e),r=n(795),a=n.n(r),o=n(569),d=n.n(o),l=n(565),c=n.n(l),s=n(216),p=n.n(s),A=n(589),u=n.n(A),m=n(748),h={};h.styleTagTransform=u(),h.setAttributes=c(),h.insert=d().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=p(),t()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;var f=n(805),g={};g.styleTagTransform=u(),g.setAttributes=c(),g.insert=d().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=p(),t()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const b=n.p+"ed7b1c334a2d2a8073db.png";function C(){let e=document.createElement("div");e.classList.add("header");let t=document.createElement("button");t.classList.add("header-icon");let n=document.createElement("img");return n.classList.add("header-icon-image"),n.src=b,t.appendChild(n),e.appendChild(t),document.body.appendChild(e),e}const I=n.p+"d38a5447abad8c6e6bb8.png",B=n.p+"00ed5da2fc49082f7693.png";var y=n(18),E={};E.styleTagTransform=u(),E.setAttributes=c(),E.insert=d().bind(null,"head"),E.domAPI=a(),E.insertStyleElement=p(),t()(y.Z,E),y.Z&&y.Z.locals&&y.Z.locals;class v{constructor(e,t,n,i){this.title=e,this.description=t,this.dueDate=n,this.priority=i}toString(){return`{"title":"${this.title}","description":"${this.description}","dueDate":"${this.dueDate}","priority":"${this.priority}"}***`}}function k(e){let t=document.createElement("div");t.classList.add("task-container");let n=document.createElement("div");n.classList.add("task-name"),n.innerHTML=e.title,t.appendChild(n);let i=document.createElement("div");i.classList.add("task-date"),i.innerHTML=e.dueDate,t.appendChild(i);let r=document.createElement("button");r.classList.add("task-details"),r.innerHTML="Details",r.addEventListener("click",(function(){document.body.appendChild(function(e){let t=Array.from(document.body.getElementsByTagName("*"));for(let e=0;e<t.length;e++)t[e].classList.add("background-filter");let n=document.createElement("div");n.classList.add("details-container");let i=document.createElement("button");i.classList.add("details-box-exit-button"),i.innerHTML="X",i.addEventListener("click",(function(){document.body.innerHTML="",document.body.appendChild(w()),Z()})),n.appendChild(i);let r=document.createElement("div");r.classList.add("details-box-child"),r.innerHTML="Title: "+e.title,n.appendChild(r);let a=document.createElement("div");a.classList.add("details-box-child"),a.innerHTML="Description: "+e.description,n.appendChild(a);let o=document.createElement("div");o.classList.add("details-box-child"),o.innerHTML="Due Date: "+e.dueDate,n.appendChild(o);let d=document.createElement("div");return d.classList.add("details-box-child"),d.innerHTML="Priority: "+e.priority.substring(0,e.priority.indexOf("-")),n.appendChild(d),n}(e))})),t.appendChild(r);let a=document.createElement("button");a.classList.add("task-button");let o=document.createElement("img");o.classList.add("task-button-icon"),o.src=I,a.addEventListener("click",(function(){document.body.appendChild(function(e){let t=Array.from(document.body.getElementsByTagName("*"));for(let e=0;e<t.length;e++)t[e].classList.add("background-filter");let n=document.createElement("div");n.classList.add("new-form-container");let i=document.createElement("form");i.classList.add("new-task-form");let r=document.createElement("input");r.value=e.title,r.name="title",r.id="task-title",r.required=!0,i.appendChild(r);let a=document.createElement("textarea");a.value=e.description,a.name="description",a.id="task-description",a.required=!0,i.appendChild(a);let o=document.createElement("input");o.value=e.dueDate,o.type="date",o.name="duedate",o.id="task-duedate",o.required=!0,o.min=(new Date).toISOString().split("T")[0],i.appendChild(o);let d=document.createElement("div");d.classList.add("priority-buttons");let l=document.createElement("input");l.id="low-priority",l.type="radio","low-priority"===e.priority&&(l.checked=!0),l.name="priorities",l.required=!0;let c=document.createElement("label");c.setAttribute("for","low-priority"),c.innerHTML="Low",d.appendChild(l),d.appendChild(c);let s=document.createElement("input");s.id="medium-priority",s.type="radio","medium-priority"===e.priority&&(s.checked=!0),s.value="medium",s.name="priorities",s.required=!0;let p=document.createElement("label");p.setAttribute("for","medium-priority"),p.innerHTML="Medium",d.appendChild(s),d.appendChild(p);let A=document.createElement("input");A.id="high-priority",A.type="radio","high-priority"===e.priority&&(A.checked=!0),A.name="priorities",A.required=!0;let u=document.createElement("label");u.setAttribute("for","high-priority"),u.innerHTML="High",d.appendChild(A),d.appendChild(u),i.appendChild(d);let m=document.createElement("input");return m.classList.add("new-form-submit-button"),m.type="submit",m.addEventListener("click",(function(){!function(e){let t=new v(document.getElementById("task-title").value,document.getElementById("task-description").value,document.getElementById("task-duedate").value,document.querySelector("input[name=priorities]:checked").id),n=function(e){let t={};for(let n in e)"title"!==n&&(t[n]=e[n]);return t}(t),i=!1;for(let r in localStorage)r.startsWith("task")&&r.substring(5)===e&&(localStorage.removeItem("task-"+e),localStorage.setItem("task-"+t.title,JSON.stringify(n)),i=!0);if(!i)for(let n in localStorage)if(n.startsWith("project")){let r=localStorage.getItem(n),a=r.split("***");a.pop(),a.forEach((i=>{JSON.parse(i).title===e&&(i+="***",localStorage.removeItem(n),localStorage.setItem(n,r.replace(i,t.toString())))})),i=!0}}(e.title)})),i.appendChild(m),n.appendChild(function(){let e=document.createElement("div");return e.classList.add("new-form-header"),e.innerHTML="Edit task...",e}()),n.appendChild(i),n}(e))})),a.appendChild(o),t.appendChild(a);let d=document.createElement("button");d.classList.add("task-button");let l=document.createElement("img");return l.classList.add("task-button-icon"),l.src=B,d.addEventListener("click",(function(){!function(e){let t=!1;for(let n in localStorage)n.startsWith("task")&&n.substring(5)===e&&(localStorage.removeItem(n),t=!0);if(!t)for(let n in localStorage)if(n.startsWith("project")){let i=localStorage.getItem(n),r=i.split("***");r.pop(),r.forEach((t=>{JSON.parse(t).title===e&&(t+="***",console.log(i.charAt(i.indexOf(t)+1)),console.log(t),localStorage.setItem(n,i.replace(t,"")))})),t=!0}}(e.title),document.body.innerHTML="",document.body.appendChild(w()),Z()})),d.appendChild(l),t.appendChild(d),t}function x(){let e=document.createElement("div");e.classList.add("sidebar");let t=["Home","Projects"];for(let n=0;n<t.length;n++){let i=document.createElement("button");i.innerHTML=t[n],i.classList.add(`${t[n].toLowerCase()}-btn`),i.classList.add("sidebar-btn"),"Projects"===i.innerHTML&&(i.id="main-project-button"),e.appendChild(i)}let n=document.createElement("div");n.classList.add("project-btns-container");for(let e in localStorage)if(localStorage.hasOwnProperty(e)&&e.startsWith("project")){let t=document.createElement("div");t.classList.add("single-project-btns-container");let i=document.createElement("button");i.classList.add("sidebar-btn"),i.classList.add("sidebar-project-btn"),i.innerHTML="// "+e.substring(8),t.appendChild(i);let r=document.createElement("button");r.classList.add("project-delete-btn"),r.innerHTML="-",r.addEventListener("click",(function(){localStorage.removeItem(e),document.body.innerHTML="",document.body.appendChild(w()),Z()})),t.appendChild(r),n.appendChild(t)}e.appendChild(n);let i=document.createElement("button");return i.innerHTML="+",i.classList.add("plus-btn"),e.appendChild(i),document.body.appendChild(e),e}function w(){let e=document.createElement("div");return e.classList.add("content"),e.appendChild(C()),e.appendChild(x()),e.appendChild(function(){let e=document.createElement("div");e.classList.add("main-content");let t=!1;for(let e in localStorage){let n=localStorage.getItem(e),i=["","***",null];!e.startsWith("task-")&&i.includes(n)||(t=!0)}t||(e.innerHTML="No tasks added! Please add some using the plus button at the bottom of your screen.",e.classList.add("empty-content"));for(let t in localStorage){if(t.startsWith("task")){let n=JSON.parse(localStorage.getItem(t));n.title=t.substring(5),e.appendChild(k(n))}if(t.startsWith("project")){let n=localStorage.getItem(t).split("***");n.pop();let i=n.map((e=>JSON.parse(e)));for(let t of i)e.appendChild(k(t))}}return e}()),e}function L(e){let t=document.createElement("div");return t.classList.add("content"),t.appendChild(C()),t.appendChild(x()),t.appendChild(function(e){let t=document.createElement("div");t.classList.add("main-content");for(let n in localStorage)if(n==="project-"+e){let i=localStorage.getItem(n).split("***");i.pop();let r=i.map((e=>JSON.parse(e)));for(let e of r)t.appendChild(k(e));if(0===t.childNodes.length){let t=document.createElement("div");return t.classList.add("main-content"),t.classList.add("empty-content"),t.innerHTML=`No tasks have been added to ${e}! Please add some using the plus button at the bottom of your screen.`,t}}return t}(e)),t}function T(){let e=document.createElement("div");return e.classList.add("new-form-header"),e.innerHTML="Create new...",e}class j{constructor(e){this.title=e,this.tasks=[]}addTask(e){this.tasks.push(e)}deleteTask(e){this.tasks=this.tasks.filter((t=>t.title!==e))}toString(){let e="";for(let t=0;t<this.tasks.length;t++){let n=this.tasks[t];e+=`{"title":"${n.title}","description":"${n.description}","dueDate":"${n.dueDate}","priority":"${n.priority}"}***`}return e}}function S(e){let t=document.getElementsByClassName("new-form-container")[0];t.parentNode.removeChild(t),"project"===e?document.body.appendChild(function(){let e=Array.from(document.body.getElementsByTagName("*"));for(let t=0;t<e.length;t++)e[t].classList.add("background-filter");let t=document.createElement("div");t.classList.add("new-form-container");let n=document.createElement("form");n.classList.add("new-project-form");let i=document.createElement("input");i.placeholder="Title:",i.name="title",i.id="project-title",i.required=!0,i.maxLength=20,n.appendChild(i);let r=document.createElement("input");return r.classList.add("new-form-submit-button"),r.type="submit",n.appendChild(r),n.addEventListener("submit",(function(){!function(){let e=new j(document.getElementById("project-title").value);localStorage.setItem("project-"+e.title,"")}()})),t.appendChild(T()),t.appendChild(M()),t.appendChild(n),t}()):"task"===e?document.body.appendChild(H()):console.log("Incorrect usage of replaceForm()")}function M(){let e=document.createElement("div");e.classList.add("new-type-buttons-container");let t=document.createElement("button");t.classList.add("new-type-button"),t.innerHTML="Task",t.addEventListener("click",(function(){S("task")})),e.appendChild(t);let n=document.createElement("button");return n.classList.add("new-type-button"),n.innerHTML="Project",n.addEventListener("click",(function(){S("project")})),e.appendChild(n),e}function H(){let e=Array.from(document.body.getElementsByTagName("*"));for(let t=0;t<e.length;t++)e[t].classList.add("background-filter");let t=document.createElement("div");t.classList.add("new-form-container");let n=document.createElement("form");n.classList.add("new-task-form");let i=document.createElement("input");i.placeholder="Title:",i.name="title",i.id="task-title",i.required=!0,n.appendChild(i);let r=document.createElement("textarea");r.placeholder="Details:",r.name="description",r.id="task-description",r.required=!0,n.appendChild(r);let a=document.createElement("input");a.type="date",a.name="duedate",a.id="task-duedate",a.required=!0,a.min=(new Date).toISOString().split("T")[0],n.appendChild(a);let o=document.createElement("div");o.classList.add("priority-buttons");let d=document.createElement("input");d.id="low-priority",d.type="radio",d.value="low",d.name="priorities",d.required=!0;let l=document.createElement("label");l.setAttribute("for","low-priority"),l.innerHTML="Low",o.appendChild(d),o.appendChild(l);let c=document.createElement("input");c.id="medium-priority",c.type="radio",c.value="medium",c.name="priorities",c.required=!0;let s=document.createElement("label");s.setAttribute("for","medium-priority"),s.innerHTML="Medium",o.appendChild(c),o.appendChild(s);let p=document.createElement("input");p.id="high-priority",p.type="radio",p.value="High",p.name="priorities",p.required=!0;let A=document.createElement("label");A.setAttribute("for","high-priority"),A.innerHTML="High",o.appendChild(p),o.appendChild(A),n.appendChild(o);let u=document.createElement("input");return u.classList.add("new-form-submit-button"),u.type="submit",u.addEventListener("click",(function(){!function(){let e=new v(document.getElementById("task-title").value,document.getElementById("task-description").value,document.getElementById("task-duedate").value,document.querySelector("input[name=priorities]:checked").id),t=function(e){let t={};for(let n in e)"title"!==n&&(t[n]=e[n]);return t}(e);localStorage.setItem("task-"+e.title,JSON.stringify(t))}()})),n.appendChild(u),t.appendChild(T()),t.appendChild(M()),t.appendChild(n),t}let W=!1,q="";function N(){let e=document.getElementsByClassName("header-icon")[0],t=document.getElementsByClassName("home-btn")[0],n=document.getElementsByClassName("sidebar-project-btn"),i=document.getElementsByClassName("plus-btn")[0];e.addEventListener("click",(function(){document.body.innerHTML="",document.body.appendChild(w()),W=!1,N()})),t.addEventListener("click",(function(){document.body.innerHTML="",document.body.appendChild(w()),W=!1,N()}));for(let e of n)e.addEventListener("click",(function(){W=!0,q=e.innerHTML.substring(3),document.body.innerHTML="",document.body.appendChild(L(q)),N()}));i.addEventListener("click",(function(){W?document.body.appendChild(function(e){let t=Array.from(document.body.getElementsByTagName("*"));for(let e=0;e<t.length;e++)t[e].classList.add("background-filter");let n=document.createElement("div");n.classList.add("new-form-container");let i=document.createElement("form");i.classList.add("new-task-form");let r=document.createElement("input");r.placeholder="Title:",r.name="title",r.id="task-title",r.required=!0,i.appendChild(r);let a=document.createElement("textarea");a.placeholder="Details:",a.name="description",a.id="task-description",a.required=!0,i.appendChild(a);let o=document.createElement("input");o.type="date",o.name="duedate",o.id="task-duedate",o.required=!0,i.appendChild(o);let d=document.createElement("div");d.classList.add("priority-buttons");let l=document.createElement("input");l.id="low-priority",l.type="radio",l.value="low",l.name="priorities",l.required=!0;let c=document.createElement("label");c.setAttribute("for","low-priority"),c.innerHTML="Low",d.appendChild(l),d.appendChild(c);let s=document.createElement("input");s.id="medium-priority",s.type="radio",s.value="medium",s.name="priorities",s.required=!0;let p=document.createElement("label");p.setAttribute("for","medium-priority"),p.innerHTML="Medium",d.appendChild(s),d.appendChild(p);let A=document.createElement("input");A.id="high-priority",A.type="radio",A.value="High",A.name="priorities",A.required=!0;let u=document.createElement("label");u.setAttribute("for","high-priority"),u.innerHTML="High",d.appendChild(A),d.appendChild(u),i.appendChild(d);let m=document.createElement("input");return m.classList.add("new-form-submit-button"),m.type="submit",m.addEventListener("click",(function(){!function(e){let t=new v(document.getElementById("task-title").value,document.getElementById("task-description").value,document.getElementById("task-duedate").value,document.querySelector("input[name=priorities]:checked").id),n=localStorage.getItem("project-"+e).split("***"),i=new j(e);for(let e=0;e<n.length-1;e++){console.log(n[e]);let t=JSON.parse(n[e]);i.addTask(t)}i.addTask(t),localStorage.setItem("project-"+e,i.toString())}(e)})),i.appendChild(m),n.appendChild(T()),n.appendChild(M()),n.appendChild(i),n}(q)):document.body.appendChild(H()),N()}))}document.body.appendChild(w()),N();const Z=N})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,